******************************
Fledge South Person detection
******************************


This directory contains a South service plugin that a detects person in the live video stream 
and generates reading object with type of object (in this case it is  person), bounding box cordinates and confidence score.
The plugins also draws the bounding box on the detection window, and also displays confidence scores, 
FPS (Frames Per Second) & type of object detected (Person). 
In the reading the bounding box consists of {x,y} for top-left corner and bottom right corner of this rectangle. These coordinates
values are based on a 640x480 canvas.

-------------------------------
Plugin Configuration Parameters
-------------------------------

TFlite Model File:
        This is the name of the tflite model file that should be placed in
        python/fledge/plugins/south/person_detection/model directory. Its default value is detect_edgetpu.tflite.
        If a Coral Edge TPU is not being used, the file name will be different (i.e. detect.tflite).

Labels File:
        This is the name of the labels file that was used when training the above
        model, this file should also be placed in same directory as the model.

Asset Name:
        The name of the asset used for the readings generated by this plugin.

Enable Edge TPU:
        Indicates whether to use edge TPU for inference.
        If you don't want to use Coral Edge TPU then disbale this configuration parameter.
        Also ensure to change the name of the model file to detect.tflite if disabled.
        Default is set to enabled.

Minimum Confidence Threshold:
        The detection results from the model will be filtered out, if the score is below this value.

Camera ID:
        The number associated with your video device. See /dev in your filesystem you will see video0 or video1.
        Default is set to 0.

Enable Detection Window:
        Show detection results in a native window.
        Default is set to disabled.

Enable Web Streaming:
        Whether to stream the detected results in a browser or not.
        Default is set to enabled.

Web Streaming Port:
        Port number where web streaming server should run, if web streaming is enabled.
        Default is set to 8085.


-----------------------------
Instructions For Installation
-----------------------------

1. First run requirements.sh
2. To see the supported configuration of the camera run

        v4l2-ctl --list-formats-ext --device /dev/video0

    You will see something like
        [0]: 'YUYV' (YUYV 4:2:2)
                Size: Discrete 640x480
                        Interval: Discrete 0.033s (30.000 fps)
                Size: Discrete 720x480
                        Interval: Discrete 0.033s (30.000 fps)
                Size: Discrete 1280x720
                        Interval: Discrete 0.033s (30.000 fps)
                Size: Discrete 1920x1080
                        Interval: Discrete 0.067s (15.000 fps)
                        Interval: Discrete 0.033s (30.000 fps)
                Size: Discrete 2592x1944
                        Interval: Discrete 0.067s (15.000 fps)
                Size: Discrete 0x0

3. You can choose resolution from here.

4. Above example uses Camera ID 0 to indicate use of /dev/video0 device, please use the applicable value for your setup

5. Install the plugin as usual filling in parameters obtained above.

-----
FAQs
-----

1. How to run this in virtual box installed in windows  machine ?

    Install virtual box extensions

    cd c:\\Program Files\\Oracle\\VirtualBox

    VBoxManage list webcams

    After obtaining the id of camera device  run this

    VboxManage controlvm "name_of_vm" webcam attach .id

    Example:

    VboxManage controlvm "new_ubuntu" webcam attach .1

2. How many models are currently supported?
    a. mobilenet_ssd_v1_coco_quant_postprocess_edgetpu.tflite (with Edge TPU), coco_labels.txt (labels_file)
    b. mobilenet_ssd_v2_coco_quant_postprocess_edgetpu.tflite (with Edge TPU), coco_labels.txt (labels_file)
    c. mobilenet_ssd_v2_face_quant_postprocess_edgetpu.tflite (with Edge TPU), coco_labels.txt (labels_file)
    d. mobilenet_ssd_v1_coco_quant_postprocess.tflite (without Edge TPU), coco_labels.txt (labels_file)
    e. mobilenet_ssd_v2_coco_quant_postprocess.tflite (without Edge TPU), coco_labels.txt (labels_file)
    f. mobilenet_ssd_v2_face_quant_postprocess.tflite (without Edge TPU), coco_labels.txt (labels_file)

    Download them from here https://github.com/google-coral/examples-camera/blob/master/download_models.sh

3. Which cameras are supported?
    a. Coral Camera
    b. USB camera supporting MJPG format.
    c. Raspberry pi camera.
